#!/usr/bin/env bash

[[ -z ${DEBUGX:-} ]] || set -x
set -euo pipefail

# Detect the tool name based on the plugin directory name used by asdf
readonly script_dir="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly file_name="$(basename "$(dirname "${script_dir}")")"

# To add a product create a case statement matching the file name and add variables as follows
  # github_repo_path
  # is the user/repository as taken from the github URL
  # e.g the part in caps: https://github.com/CONCOURSE/CONCOURSE

case $file_name in
  antctl)
    readonly github_repo_path=vmware-tanzu/antrea
    ;;
  govc)
    readonly github_repo_path=vmware/govmomi
    ;;
  imgpkg)
    readonly github_repo_path=vmware-tanzu/carvel-imgpkg
    ;;
  sonobuoy)
    readonly github_repo_path=vmware-tanzu/sonobuoy
    ;;
  *)
    echo "Product ${file_name} is not currently supported"
    exit 1
    ;;
esac

function list_all() {

  local curl_response
  local versions
  local -r github_url="https://api.github.com/repos/${github_repo_path}/releases"

  local curl_cmd="curl -Ls"
  if [ -n "${GITHUB_API_TOKEN:-}" ]; then
    curl_cmd="$curl_cmd -H 'Authorization: token $GITHUB_API_TOKEN'"
  fi

  
  local ret=0 && curl_response=$(eval "$curl_cmd --fail $github_url" 2>&1) || ret="$?"
  if [[ $ret -eq 0 ]]; then
    # Fetch all tag names, and get only second column. Then remove all unnecesary characters.
    versions=$(echo $curl_response | grep -oE "tag_name\": *\".{1,15}\"," | sed 's/tag_name\": *\"//;s/\",//; 's/v//g'' | \
      LC_ALL=C sort -t. -k 1,1 -k 2,2n -k 3,3n -k 4,4n -k 5,5n)
    echo $versions

  else
    local error=$(eval "$curl_cmd $github_url" 2>&1)
    echo "ERROR: Failure to collect versions for $file_name"
    echo "Error message: $error"
    exit 1

  fi

}

list_all